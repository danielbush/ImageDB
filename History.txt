=== 0.0.1 2010-06-19

* First version of Image DB written; we can break it up like so:
  * CRUD operations
    * store original
    * update original and sized images
    * delete original and sized images
    * fetching/resolving
      * fetch location of image with option to resolve
        to a http alias (or alternative root)
      * autogeneration of sized images
  * Resolving
    * resolve/absolute functions resolve names
      but don't check existence
  * Querying and listing
    * DB#image details about original and its size images;
      DB#images to search on originals; use grep.
      DB#glob to use shell wildcards.
  * Hierarchical
    * Ability to store new hierarchical db's within the parent
      * DB#[group_name]
      * DB#groups to list groups

=== 0.0.2 2010-06-21

  * Ability to store an image using a different name
  * Ability to rename an image (including over an existing one)

  * fetch always resolves to rel_root but can be sent params[:absolute]=>true
    to always fetch file location
    * rel_root defaults to root if not specified so that
      fetch will always resolve file location regardless
    * absolute/resolve always return a location regardless of
      existence of the image; fetch adds extra logic: return nil
      if doesn't exist; autogenerate sized images etc
  * autoresolve setting is gone as a result of the above behaviour
  * fetch can be told to return another image if the image doesn't
    exist using param :not_found => '/path/to/not-found-image.jpg' etc
